['euclidean', 1, 4]
Trying to instantiate ann_benchmarks.algorithms.pynndescent.pynndescent(['euclidean', 1, 4])
Number of query threads: 4
got a train set of size (448000 * 32)
got 450 queries
Trying to instantiate ann_benchmarks.algorithms.pynndescent.pynndescent(['euclidean', 1, 4])
Number of query threads: 4
Fri Aug 25 09:57:13 2023 Building RP forest with 31 trees
Fri Aug 25 09:57:22 2023 NN descent for 19 iterations
	 1  /  19
	 2  /  19
	 3  /  19
	 4  /  19
	 5  /  19
	 6  /  19
	 7  /  19
	 8  /  19
	 9  /  19
	Stopping threshold met -- exiting after 9 iterations
Fri Aug 25 10:03:34 2023 Worst tree score: 0.15355357
Fri Aug 25 10:03:34 2023 Mean tree score: 0.15521184
Fri Aug 25 10:03:34 2023 Best tree score: 0.15662054
Fri Aug 25 10:03:41 2023 Forward diversification reduced edges from 4480000 to 3375800
Fri Aug 25 10:03:44 2023 Reverse diversification reduced edges from 3375800 to 3375800
Fri Aug 25 10:03:48 2023 Degree pruning reduced edges from 4053304 to 3847669
Fri Aug 25 10:03:48 2023 Resorting data and graph based on tree order
Fri Aug 25 10:03:48 2023 Compressing index by removing unneeded attributes
Fri Aug 25 10:03:48 2023 Building and compiling search function
Trying to instantiate ann_benchmarks.algorithms.pynndescent.pynndescent(['euclidean', 1, 4])
Number of query threads: 4
Fri Aug 25 09:57:11 2023 Building RP forest with 31 trees
Fri Aug 25 09:57:18 2023 NN descent for 19 iterations
	 1  /  19
	 2  /  19
	 3  /  19
	 4  /  19
	 5  /  19
	 6  /  19
	 7  /  19
	 8  /  19
	 9  /  19
	Stopping threshold met -- exiting after 9 iterations
Fri Aug 25 10:02:40 2023 Worst tree score: 0.15387723
Fri Aug 25 10:02:40 2023 Mean tree score: 0.15525166
Fri Aug 25 10:02:40 2023 Best tree score: 0.15656250
Fri Aug 25 10:02:46 2023 Forward diversification reduced edges from 4480000 to 3375398
Fri Aug 25 10:02:50 2023 Reverse diversification reduced edges from 3375398 to 3375398
Fri Aug 25 10:02:53 2023 Degree pruning reduced edges from 4054662 to 3848164
Fri Aug 25 10:02:53 2023 Resorting data and graph based on tree order
Fri Aug 25 10:02:53 2023 Compressing index by removing unneeded attributes
Fri Aug 25 10:02:53 2023 Building and compiling search function
Trying to instantiate ann_benchmarks.algorithms.pynndescent.pynndescent(['euclidean', 1, 4])
Number of query threads: 4
Fri Aug 25 09:57:13 2023 Building RP forest with 31 trees
Fri Aug 25 09:57:22 2023 NN descent for 19 iterations
	 1  /  19
	 2  /  19
	 3  /  19
	 4  /  19
	 5  /  19
	 6  /  19
	 7  /  19
	 8  /  19
	 9  /  19
	Stopping threshold met -- exiting after 9 iterations
Fri Aug 25 10:03:25 2023 Worst tree score: 0.15344866
Fri Aug 25 10:03:25 2023 Mean tree score: 0.15512342
Fri Aug 25 10:03:25 2023 Best tree score: 0.15674330
Fri Aug 25 10:03:30 2023 Forward diversification reduced edges from 4480000 to 3373939
Fri Aug 25 10:03:34 2023 Reverse diversification reduced edges from 3373939 to 3373939
Fri Aug 25 10:03:37 2023 Degree pruning reduced edges from 4050682 to 3846461
Fri Aug 25 10:03:37 2023 Resorting data and graph based on tree order
Fri Aug 25 10:03:37 2023 Compressing index by removing unneeded attributes
Fri Aug 25 10:03:37 2023 Building and compiling search function
Trying to instantiate ann_benchmarks.algorithms.pynndescent.pynndescent(['euclidean', 1, 4])
Number of query threads: 4
Fri Aug 25 09:57:13 2023 Building RP forest with 31 trees
Fri Aug 25 09:57:22 2023 NN descent for 19 iterations
	 1  /  19
	 2  /  19
	 3  /  19
	 4  /  19
	 5  /  19
	 6  /  19
	 7  /  19
	 8  /  19
	 9  /  19
	Stopping threshold met -- exiting after 9 iterations
Fri Aug 25 10:02:50 2023 Worst tree score: 0.15358259
Fri Aug 25 10:02:50 2023 Mean tree score: 0.15508993
Fri Aug 25 10:02:50 2023 Best tree score: 0.15676339
Fri Aug 25 10:02:55 2023 Forward diversification reduced edges from 4480000 to 3375493
Fri Aug 25 10:02:59 2023 Reverse diversification reduced edges from 3375493 to 3375493
Fri Aug 25 10:03:02 2023 Degree pruning reduced edges from 4054262 to 3848197
Fri Aug 25 10:03:02 2023 Resorting data and graph based on tree order
Fri Aug 25 10:03:03 2023 Compressing index by removing unneeded attributes
Fri Aug 25 10:03:03 2023 Building and compiling search function
Built index in 411.3800776004791
Running query argument group 1 of 1...
Run 1/1...
Queries per second: 26518.25500526879
