['euclidean', 1, 8]
Trying to instantiate ann_benchmarks.algorithms.pynndescent.pynndescent(['euclidean', 1, 8])
Number of query threads: 8
got a train set of size (112000 * 32)
got 450 queries
Trying to instantiate ann_benchmarks.algorithms.pynndescent.pynndescent(['euclidean', 1, 8])
Number of query threads: 8
Fri Aug 25 04:30:16 2023 Building RP forest with 23 trees
Fri Aug 25 04:30:20 2023 NN descent for 17 iterations
	 1  /  17
	 2  /  17
	 3  /  17
	 4  /  17
	 5  /  17
	 6  /  17
	 7  /  17
	 8  /  17
	 9  /  17
	 10  /  17
	Stopping threshold met -- exiting after 10 iterations
Fri Aug 25 04:33:02 2023 Worst tree score: 0.18683036
Fri Aug 25 04:33:02 2023 Mean tree score: 0.18876126
Fri Aug 25 04:33:02 2023 Best tree score: 0.19254464
Fri Aug 25 04:33:07 2023 Forward diversification reduced edges from 1120000 to 820346
Fri Aug 25 04:33:11 2023 Reverse diversification reduced edges from 820346 to 820346
Fri Aug 25 04:33:13 2023 Degree pruning reduced edges from 988126 to 931051
Fri Aug 25 04:33:13 2023 Resorting data and graph based on tree order
Fri Aug 25 04:33:14 2023 Compressing index by removing unneeded attributes
Fri Aug 25 04:33:14 2023 Building and compiling search function
Trying to instantiate ann_benchmarks.algorithms.pynndescent.pynndescent(['euclidean', 1, 8])
Number of query threads: 8
Fri Aug 25 04:30:15 2023 Building RP forest with 23 trees
Fri Aug 25 04:30:20 2023 NN descent for 17 iterations
	 1  /  17
	 2  /  17
	 3  /  17
	 4  /  17
	 5  /  17
	 6  /  17
	 7  /  17
	 8  /  17
	 9  /  17
	 10  /  17
	Stopping threshold met -- exiting after 10 iterations
Fri Aug 25 04:32:59 2023 Worst tree score: 0.18625893
Fri Aug 25 04:32:59 2023 Mean tree score: 0.18873370
Fri Aug 25 04:32:59 2023 Best tree score: 0.19232143
Fri Aug 25 04:33:03 2023 Forward diversification reduced edges from 1120000 to 820708
Fri Aug 25 04:33:07 2023 Reverse diversification reduced edges from 820708 to 820708
Fri Aug 25 04:33:10 2023 Degree pruning reduced edges from 988472 to 931061
Fri Aug 25 04:33:10 2023 Resorting data and graph based on tree order
Fri Aug 25 04:33:10 2023 Compressing index by removing unneeded attributes
Fri Aug 25 04:33:10 2023 Building and compiling search function
Trying to instantiate ann_benchmarks.algorithms.pynndescent.pynndescent(['euclidean', 1, 8])
Number of query threads: 8
Fri Aug 25 04:30:15 2023 Building RP forest with 23 trees
Fri Aug 25 04:30:20 2023 NN descent for 17 iterations
	 1  /  17
	 2  /  17
	 3  /  17
	 4  /  17
	 5  /  17
	 6  /  17
	 7  /  17
	 8  /  17
	 9  /  17
	 10  /  17
	Stopping threshold met -- exiting after 10 iterations
Fri Aug 25 04:32:59 2023 Worst tree score: 0.18550893
Fri Aug 25 04:32:59 2023 Mean tree score: 0.18865683
Fri Aug 25 04:32:59 2023 Best tree score: 0.19136607
Fri Aug 25 04:33:03 2023 Forward diversification reduced edges from 1120000 to 820764
Fri Aug 25 04:33:06 2023 Reverse diversification reduced edges from 820764 to 820764
Fri Aug 25 04:33:10 2023 Degree pruning reduced edges from 988052 to 930755
Fri Aug 25 04:33:10 2023 Resorting data and graph based on tree order
Fri Aug 25 04:33:10 2023 Compressing index by removing unneeded attributes
Fri Aug 25 04:33:10 2023 Building and compiling search function
Trying to instantiate ann_benchmarks.algorithms.pynndescent.pynndescent(['euclidean', 1, 8])
Number of query threads: 8
Fri Aug 25 04:30:16 2023 Building RP forest with 23 trees
Fri Aug 25 04:30:20 2023 NN descent for 17 iterations
	 1  /  17
	 2  /  17
	 3  /  17
	 4  /  17
	 5  /  17
	 6  /  17
	 7  /  17
	 8  /  17
	 9  /  17
	 10  /  17
	Stopping threshold met -- exiting after 10 iterations
Fri Aug 25 04:32:59 2023 Worst tree score: 0.18532143
Fri Aug 25 04:32:59 2023 Mean tree score: 0.18845807
Fri Aug 25 04:32:59 2023 Best tree score: 0.19162500
Fri Aug 25 04:33:03 2023 Forward diversification reduced edges from 1120000 to 820031
Fri Aug 25 04:33:07 2023 Reverse diversification reduced edges from 820031 to 820031
Fri Aug 25 04:33:10 2023 Degree pruning reduced edges from 988362 to 930619
Fri Aug 25 04:33:10 2023 Resorting data and graph based on tree order
Fri Aug 25 04:33:10 2023 Compressing index by removing unneeded attributes
Fri Aug 25 04:33:10 2023 Building and compiling search function
Trying to instantiate ann_benchmarks.algorithms.pynndescent.pynndescent(['euclidean', 1, 8])
Number of query threads: 8
Fri Aug 25 04:30:15 2023 Building RP forest with 23 trees
Fri Aug 25 04:30:20 2023 NN descent for 17 iterations
	 1  /  17
	 2  /  17
	 3  /  17
	 4  /  17
	 5  /  17
	 6  /  17
	 7  /  17
	 8  /  17
	 9  /  17
	 10  /  17
	Stopping threshold met -- exiting after 10 iterations
Fri Aug 25 04:33:00 2023 Worst tree score: 0.18602679
Fri Aug 25 04:33:00 2023 Mean tree score: 0.18906522
Fri Aug 25 04:33:00 2023 Best tree score: 0.19467857
Fri Aug 25 04:33:04 2023 Forward diversification reduced edges from 1120000 to 820887
Fri Aug 25 04:33:08 2023 Reverse diversification reduced edges from 820887 to 820887
Fri Aug 25 04:33:11 2023 Degree pruning reduced edges from 989022 to 931689
Fri Aug 25 04:33:11 2023 Resorting data and graph based on tree order
Fri Aug 25 04:33:11 2023 Compressing index by removing unneeded attributes
Fri Aug 25 04:33:11 2023 Building and compiling search function
Trying to instantiate ann_benchmarks.algorithms.pynndescent.pynndescent(['euclidean', 1, 8])
Number of query threads: 8
Fri Aug 25 04:30:16 2023 Building RP forest with 23 trees
Fri Aug 25 04:30:20 2023 NN descent for 17 iterations
	 1  /  17
	 2  /  17
	 3  /  17
	 4  /  17
	 5  /  17
	 6  /  17
	 7  /  17
	 8  /  17
	 9  /  17
	 10  /  17
	Stopping threshold met -- exiting after 10 iterations
Fri Aug 25 04:32:59 2023 Worst tree score: 0.18555357
Fri Aug 25 04:32:59 2023 Mean tree score: 0.18841925
Fri Aug 25 04:32:59 2023 Best tree score: 0.19146429
Fri Aug 25 04:33:04 2023 Forward diversification reduced edges from 1120000 to 820532
Fri Aug 25 04:33:07 2023 Reverse diversification reduced edges from 820532 to 820532
Fri Aug 25 04:33:10 2023 Degree pruning reduced edges from 988668 to 931051
Fri Aug 25 04:33:10 2023 Resorting data and graph based on tree order
Fri Aug 25 04:33:10 2023 Compressing index by removing unneeded attributes
Fri Aug 25 04:33:10 2023 Building and compiling search function
Trying to instantiate ann_benchmarks.algorithms.pynndescent.pynndescent(['euclidean', 1, 8])
Number of query threads: 8
Fri Aug 25 04:30:16 2023 Building RP forest with 23 trees
Fri Aug 25 04:30:20 2023 NN descent for 17 iterations
	 1  /  17
	 2  /  17
	 3  /  17
	 4  /  17
	 5  /  17
	 6  /  17
	 7  /  17
	 8  /  17
	 9  /  17
	 10  /  17
	Stopping threshold met -- exiting after 10 iterations
Fri Aug 25 04:32:59 2023 Worst tree score: 0.18702679
Fri Aug 25 04:32:59 2023 Mean tree score: 0.18883929
Fri Aug 25 04:32:59 2023 Best tree score: 0.19237500
Fri Aug 25 04:33:03 2023 Forward diversification reduced edges from 1120000 to 820417
Fri Aug 25 04:33:06 2023 Reverse diversification reduced edges from 820417 to 820417
Fri Aug 25 04:33:10 2023 Degree pruning reduced edges from 988558 to 931277
Fri Aug 25 04:33:10 2023 Resorting data and graph based on tree order
Fri Aug 25 04:33:10 2023 Compressing index by removing unneeded attributes
Fri Aug 25 04:33:10 2023 Building and compiling search function
Trying to instantiate ann_benchmarks.algorithms.pynndescent.pynndescent(['euclidean', 1, 8])
Number of query threads: 8
Fri Aug 25 04:30:15 2023 Building RP forest with 23 trees
Fri Aug 25 04:30:20 2023 NN descent for 17 iterations
	 1  /  17
	 2  /  17
	 3  /  17
	 4  /  17
	 5  /  17
	 6  /  17
	 7  /  17
	 8  /  17
	 9  /  17
	 10  /  17
	Stopping threshold met -- exiting after 10 iterations
Fri Aug 25 04:32:58 2023 Worst tree score: 0.18539286
Fri Aug 25 04:32:58 2023 Mean tree score: 0.18881250
Fri Aug 25 04:32:58 2023 Best tree score: 0.19201786
Fri Aug 25 04:33:02 2023 Forward diversification reduced edges from 1120000 to 820508
Fri Aug 25 04:33:05 2023 Reverse diversification reduced edges from 820508 to 820508
Fri Aug 25 04:33:09 2023 Degree pruning reduced edges from 987586 to 930932
Fri Aug 25 04:33:09 2023 Resorting data and graph based on tree order
Fri Aug 25 04:33:09 2023 Compressing index by removing unneeded attributes
Fri Aug 25 04:33:09 2023 Building and compiling search function
Built index in 190.1087760925293
Running query argument group 1 of 1...
Run 1/1...
Queries per second: 39692.89394544789
