['euclidean', 1, 2]
Trying to instantiate ann_benchmarks.algorithms.pynndescent.pynndescent(['euclidean', 1, 2])
Number of query threads: 2
got a train set of size (7000 * 2048)
got 450 queries
Trying to instantiate ann_benchmarks.algorithms.pynndescent.pynndescent(['euclidean', 1, 2])
Number of query threads: 2
Mon Aug 28 02:24:30 2023 Building RP forest with 14 trees
Mon Aug 28 02:24:34 2023 NN descent for 13 iterations
	 1  /  13
	 2  /  13
	 3  /  13
	 4  /  13
	 5  /  13
	Stopping threshold met -- exiting after 5 iterations
Mon Aug 28 02:26:26 2023 Worst tree score: 0.57642857
Mon Aug 28 02:26:26 2023 Mean tree score: 0.61336735
Mon Aug 28 02:26:26 2023 Best tree score: 0.62942857
Mon Aug 28 02:26:30 2023 Forward diversification reduced edges from 70000 to 40017
Mon Aug 28 02:26:33 2023 Reverse diversification reduced edges from 40017 to 40017
Mon Aug 28 02:26:35 2023 Degree pruning reduced edges from 43058 to 42841
Mon Aug 28 02:26:35 2023 Resorting data and graph based on tree order
Mon Aug 28 02:26:35 2023 Compressing index by removing unneeded attributes
Mon Aug 28 02:26:35 2023 Building and compiling search function
Trying to instantiate ann_benchmarks.algorithms.pynndescent.pynndescent(['euclidean', 1, 2])
Number of query threads: 2
Mon Aug 28 02:24:30 2023 Building RP forest with 14 trees
Mon Aug 28 02:24:34 2023 NN descent for 13 iterations
	 1  /  13
	 2  /  13
	 3  /  13
	 4  /  13
	 5  /  13
	Stopping threshold met -- exiting after 5 iterations
Mon Aug 28 02:26:22 2023 Worst tree score: 0.56928571
Mon Aug 28 02:26:22 2023 Mean tree score: 0.61093878
Mon Aug 28 02:26:22 2023 Best tree score: 0.64471429
Mon Aug 28 02:26:26 2023 Forward diversification reduced edges from 70000 to 39908
Mon Aug 28 02:26:29 2023 Reverse diversification reduced edges from 39908 to 39908
Mon Aug 28 02:26:32 2023 Degree pruning reduced edges from 42954 to 42747
Mon Aug 28 02:26:32 2023 Resorting data and graph based on tree order
Mon Aug 28 02:26:32 2023 Compressing index by removing unneeded attributes
Mon Aug 28 02:26:32 2023 Building and compiling search function
Built index in 137.70751237869263
Running query argument group 1 of 1...
Run 1/1...
Queries per second: 7665.433928854208
